extends layouts/impress

block append head
  link(rel='stylesheet',type='text/css',href='css/sassy.css')

block append footer
  link(rel='stylesheet',type='text/css',href='css/shCore.css')
  link(rel='stylesheet',type='text/css',href='css/shThemeDefault.css')
  script(type='text/javascript',src='js/shCore.js')
  script(type='text/javascript',src='js/shBrushSass.js')
  script(type='text/javascript') SyntaxHighlighter.all();

block append content
  .fallback-message
  #impress.sassy
    #first.step.slide(data-x='-1000',data-y='-1500')
      .center.middle
        p.thesassy The Sassy 
          strong World 
        p.of of 
        p.preprocessors 
          strong Preprocessors
    #cssright.step.hidden.slide(data-x='0', data-y='-1500')
      .center.middle
        p <strong>C</strong>ascading 
        p <strong>S</strong>tyle 
        p <strong>S</strong>heets
        p(data-jmpress='fade') Lets check out some <strong>code</strong> 
    #step1.step.slide.full(data-x='1000', data-y='-1500')
      .center
        pre(class='brush: sass')
          | #cssrules {
          |     font-size: 20pt;
          | }
          | div.content {
          |     font-size: 10pt;
          |     background-color: #bada55;
          |     margin: 20px;
          | }
          | div.content pre {
          |     margin: 10px;
          |     text-shadow: 2px 2px 2px #333;
          |     border-radius 5px;
          | }
        p(data-jmpress='fade') That's a lot of <strong>double maintenance</strong> code&hellip;
        p(data-jmpress='fade') How about we add some <strong>variables</strong>?
    #step2.step.slide.full(data-x='2000', data-y='-1500')
      .center
        pre(class='brush: sass; highlight: [5, 9]')
          | $bgcolor: #bada55;
          | $fsize: 20pt;
          | 
          | #cssrules {
          |     font-size: $fsize;
          | }
          | div.content {
          |     font-size: 10pt;
          |     background-color: $bgcolor;
          |     margin: 20px;
          | }
          | div.content pre {
          |     margin: 10px;
          |     text-shadow: 2px 2px 2px #333;
          |     border-radius 5px;
          | }
        p(data-jmpress='fade') Let's put in some <strong>arithmetic</strong>
    #step3.step.slide.full(data-x='3000', data-y='-1500')
      .center
        pre(class='brush: sass; highlight: [9, 11]')
          | $bgcolor: #bada55;
          | $fsize: 20pt;
          | $common_margin: 10px;
          | 
          | #cssrules {
          |     font-size: $fsize;
          | }
          | div.content {
          |     font-size: $fsize / 2;
          |     background-color: $bgcolor;
          |     margin: $common_margin * 2;
          | }
          | div.content pre {
          |     margin: $common_margin;
          |     text-shadow: 2px 2px 2px #333;
          |     border-radius 5px;
          | }
        p(data-jmpress='fade') How about some lovely <strong>nesting</strong>? 
    #step4.step.slide.full(data-x='4000', data-y='-1500')
      .center
        pre(class='brush: sass; highlight: [12,13,14,15,16]')
          | $bgcolor: #bada55;
          | $fsize: 20pt;
          | $common_margin: 10px;
          | 
          | #cssrules {
          |     font-size: $fsize;
          | }
          | div.content {
          |     font-size: $fsize / 2;
          |     background-color: $bgcolor;
          |     margin: $common_margin * 2;
          |     pre { 
          |         margin: $common_margin;
          |         text-shadow: 2px 2px 2px #333;
          |         border-radius 5px;
          |     }
          | }
        p(data-jmpress='fade') Can we do something about prefixes for border-radius? <br />Something like a <strong>mixin</strong>? 
    #step5.step.slide(data-x='5000',data-y='-1500',data-z='-1',data-rotate-y='180')
      .center.middle
        pre(class='brush: sass;')
          | @mixin common-border {
          |   $b: 5px;
          |   -webkit-border-radius: $b;
          |   -moz-border-radius: $b;
          |   -o-border-radius: $b;
          |   border-radius: $b;
          | }
        p <strong>Usage</strong>:
        pre(class='brush: sass;')
          | @include common-border;
    #step6.step.slide.full(data-x='5000',data-y='-1500')
      .center
        pre(class='brush: sass; highlight: [13]')
          | // variables and mixin defs...
          | 
          | #cssrules {
          |     font-size: $fsize;
          | }
          | div.content {
          |     font-size: $fsize / 2;
          |     background-color: $bgcolor;
          |     margin: $common_margin * 2;
          |     pre { 
          |         margin: $common_margin;
          |         text-shadow: 2px 2px 2px #333;
          |         @include common-border;
          |     }
          | }
    #allsteps.step.hidden.slide(data-x='3100',data-y='-400',data-z='-1',data-scale='7')
      div(style="position:relative")
        div(style="position:absolute;top:200px;left:65px;") 
          | *.CSS
        div(style="position:absolute;top:250px;left:40px;width:720px;text-align:center;",data-jmpress="fade") 
          div(style="-webkit-transform: rotate(-90deg);font-size:700px;opacity:0.3;line-height:0") {
          | *.SCSS<br/>
          img(src='../src/images/sass_logo.gif',style="z-index:1;")
    #how.step.hidden.slide(data-x='7000',data-y='-1500')
      .center.middle
        h2 How does it all <strong>work</strong>?
        p Add picture here that describes preprocessing SASS to CSS so that browsers will understand
    #other.step.slide(data-x='8000',data-y='-1500')
      .center.middle
        h2 What other things can be <strong>preprocessed</strong> to our advantage?
        p HTML
        p Javascript
    #jade.step.slide(data-x="9000",data-y="-1500")
      .center.middle
         h2 Jade
         p HTML replacement
    #jade-example.step.slide(data-x="9000",data-y="-700")
      .center.middle
         p example Jade code
    #coffee.step.slide(data-x="10000",data-y="-1500")
      .center.middle
         h2 Coffeescript
         p Javascript replacement
    #coffee-example.step.slide(data-x="10000",data-y="-700")
      .center.middle
        p example Coffeescript code
    #tools.step.slide(data-x="11000",data-y="-1500")
      .center.middle
         h2 Tools
    #demos.step.hidden.slide(data-x="11800",data-y="-1500",data-z="-100",data-rotate-y="70",data-rotate-x="-20")
      .center.middle
        q 
          strong(style="font-size:200px;") DEMOS!?
